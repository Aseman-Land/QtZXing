import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump -nonrelocatable QZXing 2.3'

Module {
    dependencies: ["QtQuick 2.8"]
    Component {
        name: "QAbstractVideoFilter"
        prototype: "QObject"
        Property { name: "active"; type: "bool" }
    }
    Component {
        name: "QZXing"
        prototype: "QObject"
        exports: ["QZXing/QZXing 2.3"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "DecoderFormat"
            values: {
                "DecoderFormat_None": 0,
                "DecoderFormat_Aztec": 2,
                "DecoderFormat_CODABAR": 4,
                "DecoderFormat_CODE_39": 8,
                "DecoderFormat_CODE_93": 16,
                "DecoderFormat_CODE_128": 32,
                "DecoderFormat_DATA_MATRIX": 64,
                "DecoderFormat_EAN_8": 128,
                "DecoderFormat_EAN_13": 256,
                "DecoderFormat_ITF": 512,
                "DecoderFormat_MAXICODE": 1024,
                "DecoderFormat_PDF_417": 2048,
                "DecoderFormat_QR_CODE": 4096,
                "DecoderFormat_RSS_14": 8192,
                "DecoderFormat_RSS_EXPANDED": 16384,
                "DecoderFormat_UPC_A": 32768,
                "DecoderFormat_UPC_E": 65536,
                "DecoderFormat_UPC_EAN_EXTENSION": 131072,
                "DecoderFormat_CODE_128_GS1": 262144
            }
        }
        Property { name: "processingTime"; type: "int"; isReadonly: true }
        Property { name: "enabledDecoders"; type: "uint" }
        Property { name: "tryHarder"; type: "bool" }
        Signal { name: "decodingStarted" }
        Signal {
            name: "decodingFinished"
            Parameter { name: "succeeded"; type: "bool" }
        }
        Signal { name: "enabledFormatsChanged" }
        Signal {
            name: "tagFound"
            Parameter { name: "tag"; type: "string" }
        }
        Signal {
            name: "tagFoundAdvanced"
            Parameter { name: "tag"; type: "string" }
            Parameter { name: "format"; type: "string" }
            Parameter { name: "charSet"; type: "string" }
        }
        Signal {
            name: "tagFoundAdvanced"
            Parameter { name: "tag"; type: "string" }
            Parameter { name: "format"; type: "string" }
            Parameter { name: "charSet"; type: "string" }
            Parameter { name: "rect"; type: "QRectF" }
        }
        Signal {
            name: "error"
            Parameter { name: "msg"; type: "string" }
        }
        Method {
            name: "decodeImage"
            type: "string"
            Parameter { name: "image"; type: "QImage" }
            Parameter { name: "maxWidth"; type: "int" }
            Parameter { name: "maxHeight"; type: "int" }
            Parameter { name: "smoothTransformation"; type: "bool" }
        }
        Method {
            name: "decodeImage"
            type: "string"
            Parameter { name: "image"; type: "QImage" }
            Parameter { name: "maxWidth"; type: "int" }
            Parameter { name: "maxHeight"; type: "int" }
        }
        Method {
            name: "decodeImage"
            type: "string"
            Parameter { name: "image"; type: "QImage" }
            Parameter { name: "maxWidth"; type: "int" }
        }
        Method {
            name: "decodeImage"
            type: "string"
            Parameter { name: "image"; type: "QImage" }
        }
        Method {
            name: "decodeImageFromFile"
            type: "string"
            Parameter { name: "imageFilePath"; type: "string" }
            Parameter { name: "maxWidth"; type: "int" }
            Parameter { name: "maxHeight"; type: "int" }
            Parameter { name: "smoothTransformation"; type: "bool" }
        }
        Method {
            name: "decodeImageFromFile"
            type: "string"
            Parameter { name: "imageFilePath"; type: "string" }
            Parameter { name: "maxWidth"; type: "int" }
            Parameter { name: "maxHeight"; type: "int" }
        }
        Method {
            name: "decodeImageFromFile"
            type: "string"
            Parameter { name: "imageFilePath"; type: "string" }
            Parameter { name: "maxWidth"; type: "int" }
        }
        Method {
            name: "decodeImageFromFile"
            type: "string"
            Parameter { name: "imageFilePath"; type: "string" }
        }
        Method {
            name: "decodeImageQML"
            type: "string"
            Parameter { name: "item"; type: "QObject"; isPointer: true }
        }
        Method {
            name: "decodeSubImageQML"
            type: "string"
            Parameter { name: "item"; type: "QObject"; isPointer: true }
            Parameter { name: "offsetX"; type: "int" }
            Parameter { name: "offsetY"; type: "int" }
            Parameter { name: "width"; type: "int" }
            Parameter { name: "height"; type: "int" }
        }
        Method {
            name: "decodeSubImageQML"
            type: "string"
            Parameter { name: "item"; type: "QObject"; isPointer: true }
            Parameter { name: "offsetX"; type: "int" }
            Parameter { name: "offsetY"; type: "int" }
            Parameter { name: "width"; type: "int" }
        }
        Method {
            name: "decodeSubImageQML"
            type: "string"
            Parameter { name: "item"; type: "QObject"; isPointer: true }
            Parameter { name: "offsetX"; type: "int" }
            Parameter { name: "offsetY"; type: "int" }
        }
        Method {
            name: "decodeSubImageQML"
            type: "string"
            Parameter { name: "item"; type: "QObject"; isPointer: true }
            Parameter { name: "offsetX"; type: "int" }
        }
        Method {
            name: "decodeSubImageQML"
            type: "string"
            Parameter { name: "item"; type: "QObject"; isPointer: true }
        }
        Method {
            name: "decodeImageQML"
            type: "string"
            Parameter { name: "imageUrl"; type: "QUrl" }
        }
        Method {
            name: "decodeSubImageQML"
            type: "string"
            Parameter { name: "imageUrl"; type: "QUrl" }
            Parameter { name: "offsetX"; type: "int" }
            Parameter { name: "offsetY"; type: "int" }
            Parameter { name: "width"; type: "int" }
            Parameter { name: "height"; type: "int" }
        }
        Method {
            name: "decodeSubImageQML"
            type: "string"
            Parameter { name: "imageUrl"; type: "QUrl" }
            Parameter { name: "offsetX"; type: "int" }
            Parameter { name: "offsetY"; type: "int" }
            Parameter { name: "width"; type: "int" }
        }
        Method {
            name: "decodeSubImageQML"
            type: "string"
            Parameter { name: "imageUrl"; type: "QUrl" }
            Parameter { name: "offsetX"; type: "int" }
            Parameter { name: "offsetY"; type: "int" }
        }
        Method {
            name: "decodeSubImageQML"
            type: "string"
            Parameter { name: "imageUrl"; type: "QUrl" }
            Parameter { name: "offsetX"; type: "int" }
        }
        Method {
            name: "decodeSubImageQML"
            type: "string"
            Parameter { name: "imageUrl"; type: "QUrl" }
        }
        Method {
            name: "encodeData"
            type: "QImage"
            Parameter { name: "data"; type: "string" }
            Parameter { name: "encoderFormat"; type: "EncoderFormat" }
            Parameter { name: "encoderImageSize"; type: "QSize" }
            Parameter { name: "errorCorrectionLevel"; type: "EncodeErrorCorrectionLevel" }
        }
        Method {
            name: "encodeData"
            type: "QImage"
            Parameter { name: "data"; type: "string" }
            Parameter { name: "encoderFormat"; type: "EncoderFormat" }
            Parameter { name: "encoderImageSize"; type: "QSize" }
        }
        Method {
            name: "encodeData"
            type: "QImage"
            Parameter { name: "data"; type: "string" }
            Parameter { name: "encoderFormat"; type: "EncoderFormat" }
        }
        Method {
            name: "encodeData"
            type: "QImage"
            Parameter { name: "data"; type: "string" }
        }
        Method { name: "getProcessTimeOfLastDecoding"; type: "int" }
        Method { name: "getEnabledFormats"; type: "uint" }
        Method {
            name: "setDecoder"
            Parameter { name: "hint"; type: "uint" }
        }
        Method { name: "foundedFormat"; type: "string" }
        Method { name: "charSet"; type: "string" }
    }
    Component {
        name: "QZXingFilter"
        prototype: "QAbstractVideoFilter"
        exports: ["QZXing/QZXingFilter 2.3"]
        exportMetaObjectRevisions: [0]
        Property { name: "decoding"; type: "bool"; isReadonly: true }
        Property { name: "decoder"; type: "QZXing"; isReadonly: true; isPointer: true }
        Property { name: "captureRect"; type: "QRectF" }
        Signal { name: "isDecodingChanged" }
        Signal {
            name: "decodingFinished"
            Parameter { name: "succeeded"; type: "bool" }
            Parameter { name: "decodeTime"; type: "int" }
        }
        Signal { name: "decodingStarted" }
    }
}
